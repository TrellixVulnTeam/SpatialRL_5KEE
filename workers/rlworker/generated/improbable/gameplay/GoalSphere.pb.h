// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: improbable/gameplay/GoalSphere.proto

#ifndef PROTOBUF_improbable_2fgameplay_2fGoalSphere_2eproto__INCLUDED
#define PROTOBUF_improbable_2fgameplay_2fGoalSphere_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "improbable/entity_state.pb.h"
// @@protoc_insertion_point(includes)

namespace schema {
namespace improbable {
namespace gameplay {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_improbable_2fgameplay_2fGoalSphere_2eproto();
void protobuf_AssignDesc_improbable_2fgameplay_2fGoalSphere_2eproto();
void protobuf_ShutdownFile_improbable_2fgameplay_2fGoalSphere_2eproto();

class Collision;
class GoalSphere;
class GoalSphereData;
class GoalSphere_Commands;
class GoalSphere_Events;

// ===================================================================

class Collision : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.gameplay.Collision) */ {
 public:
  Collision();
  virtual ~Collision();

  Collision(const Collision& from);

  inline Collision& operator=(const Collision& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Collision& default_instance();

  void Swap(Collision* other);

  // implements Message ----------------------------------------------

  inline Collision* New() const { return New(NULL); }

  Collision* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Collision& from);
  void MergeFrom(const Collision& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Collision* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 field1_time = 1;
  bool has_field1_time() const;
  void clear_field1_time();
  static const int kField1TimeFieldNumber = 1;
  ::google::protobuf::int64 field1_time() const;
  void set_field1_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:schema.improbable.gameplay.Collision)
 private:
  inline void set_has_field1_time();
  inline void clear_has_field1_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 field1_time_;
  friend void  protobuf_AddDesc_improbable_2fgameplay_2fGoalSphere_2eproto();
  friend void protobuf_AssignDesc_improbable_2fgameplay_2fGoalSphere_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fgameplay_2fGoalSphere_2eproto();

  void InitAsDefaultInstance();
  static Collision* default_instance_;
};
// -------------------------------------------------------------------

class GoalSphereData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.gameplay.GoalSphereData) */ {
 public:
  GoalSphereData();
  virtual ~GoalSphereData();

  GoalSphereData(const GoalSphereData& from);

  inline GoalSphereData& operator=(const GoalSphereData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoalSphereData& default_instance();

  void Swap(GoalSphereData* other);

  // implements Message ----------------------------------------------

  inline GoalSphereData* New() const { return New(NULL); }

  GoalSphereData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoalSphereData& from);
  void MergeFrom(const GoalSphereData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GoalSphereData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool field1_collided = 1;
  bool has_field1_collided() const;
  void clear_field1_collided();
  static const int kField1CollidedFieldNumber = 1;
  bool field1_collided() const;
  void set_field1_collided(bool value);

  // @@protoc_insertion_point(class_scope:schema.improbable.gameplay.GoalSphereData)
 private:
  inline void set_has_field1_collided();
  inline void clear_has_field1_collided();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool field1_collided_;
  friend void  protobuf_AddDesc_improbable_2fgameplay_2fGoalSphere_2eproto();
  friend void protobuf_AssignDesc_improbable_2fgameplay_2fGoalSphere_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fgameplay_2fGoalSphere_2eproto();

  void InitAsDefaultInstance();
  static GoalSphereData* default_instance_;
};
// -------------------------------------------------------------------

class GoalSphere_Events : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.gameplay.GoalSphere.Events) */ {
 public:
  GoalSphere_Events();
  virtual ~GoalSphere_Events();

  GoalSphere_Events(const GoalSphere_Events& from);

  inline GoalSphere_Events& operator=(const GoalSphere_Events& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoalSphere_Events& default_instance();

  void Swap(GoalSphere_Events* other);

  // implements Message ----------------------------------------------

  inline GoalSphere_Events* New() const { return New(NULL); }

  GoalSphere_Events* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoalSphere_Events& from);
  void MergeFrom(const GoalSphere_Events& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GoalSphere_Events* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .schema.improbable.gameplay.Collision event_collide = 1;
  int event_collide_size() const;
  void clear_event_collide();
  static const int kEventCollideFieldNumber = 1;
  const ::schema::improbable::gameplay::Collision& event_collide(int index) const;
  ::schema::improbable::gameplay::Collision* mutable_event_collide(int index);
  ::schema::improbable::gameplay::Collision* add_event_collide();
  ::google::protobuf::RepeatedPtrField< ::schema::improbable::gameplay::Collision >*
      mutable_event_collide();
  const ::google::protobuf::RepeatedPtrField< ::schema::improbable::gameplay::Collision >&
      event_collide() const;

  // @@protoc_insertion_point(class_scope:schema.improbable.gameplay.GoalSphere.Events)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::schema::improbable::gameplay::Collision > event_collide_;
  friend void  protobuf_AddDesc_improbable_2fgameplay_2fGoalSphere_2eproto();
  friend void protobuf_AssignDesc_improbable_2fgameplay_2fGoalSphere_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fgameplay_2fGoalSphere_2eproto();

  void InitAsDefaultInstance();
  static GoalSphere_Events* default_instance_;
};
// -------------------------------------------------------------------

class GoalSphere_Commands : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.gameplay.GoalSphere.Commands) */ {
 public:
  GoalSphere_Commands();
  virtual ~GoalSphere_Commands();

  GoalSphere_Commands(const GoalSphere_Commands& from);

  inline GoalSphere_Commands& operator=(const GoalSphere_Commands& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoalSphere_Commands& default_instance();

  void Swap(GoalSphere_Commands* other);

  // implements Message ----------------------------------------------

  inline GoalSphere_Commands* New() const { return New(NULL); }

  GoalSphere_Commands* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoalSphere_Commands& from);
  void MergeFrom(const GoalSphere_Commands& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GoalSphere_Commands* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:schema.improbable.gameplay.GoalSphere.Commands)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_improbable_2fgameplay_2fGoalSphere_2eproto();
  friend void protobuf_AssignDesc_improbable_2fgameplay_2fGoalSphere_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fgameplay_2fGoalSphere_2eproto();

  void InitAsDefaultInstance();
  static GoalSphere_Commands* default_instance_;
};
// -------------------------------------------------------------------

class GoalSphere : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.gameplay.GoalSphere) */ {
 public:
  GoalSphere();
  virtual ~GoalSphere();

  GoalSphere(const GoalSphere& from);

  inline GoalSphere& operator=(const GoalSphere& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoalSphere& default_instance();

  void Swap(GoalSphere* other);

  // implements Message ----------------------------------------------

  inline GoalSphere* New() const { return New(NULL); }

  GoalSphere* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoalSphere& from);
  void MergeFrom(const GoalSphere& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GoalSphere* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GoalSphere_Events Events;
  typedef GoalSphere_Commands Commands;

  // accessors -------------------------------------------------------

  static const int kComponentExtensionFieldNumber = 1005;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityState,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::gameplay::GoalSphereData >, 11, false >
    component_extension;
  static const int kEventExtensionFieldNumber = 1005;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityEvent,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::gameplay::GoalSphere_Events >, 11, false >
    event_extension;
  static const int kCommandExtensionFieldNumber = 1005;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityCommand,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::gameplay::GoalSphere_Commands >, 11, false >
    command_extension;
  // @@protoc_insertion_point(class_scope:schema.improbable.gameplay.GoalSphere)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_improbable_2fgameplay_2fGoalSphere_2eproto();
  friend void protobuf_AssignDesc_improbable_2fgameplay_2fGoalSphere_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fgameplay_2fGoalSphere_2eproto();

  void InitAsDefaultInstance();
  static GoalSphere* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Collision

// optional int64 field1_time = 1;
inline bool Collision::has_field1_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Collision::set_has_field1_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Collision::clear_has_field1_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Collision::clear_field1_time() {
  field1_time_ = GOOGLE_LONGLONG(0);
  clear_has_field1_time();
}
inline ::google::protobuf::int64 Collision::field1_time() const {
  // @@protoc_insertion_point(field_get:schema.improbable.gameplay.Collision.field1_time)
  return field1_time_;
}
inline void Collision::set_field1_time(::google::protobuf::int64 value) {
  set_has_field1_time();
  field1_time_ = value;
  // @@protoc_insertion_point(field_set:schema.improbable.gameplay.Collision.field1_time)
}

// -------------------------------------------------------------------

// GoalSphereData

// optional bool field1_collided = 1;
inline bool GoalSphereData::has_field1_collided() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoalSphereData::set_has_field1_collided() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoalSphereData::clear_has_field1_collided() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoalSphereData::clear_field1_collided() {
  field1_collided_ = false;
  clear_has_field1_collided();
}
inline bool GoalSphereData::field1_collided() const {
  // @@protoc_insertion_point(field_get:schema.improbable.gameplay.GoalSphereData.field1_collided)
  return field1_collided_;
}
inline void GoalSphereData::set_field1_collided(bool value) {
  set_has_field1_collided();
  field1_collided_ = value;
  // @@protoc_insertion_point(field_set:schema.improbable.gameplay.GoalSphereData.field1_collided)
}

// -------------------------------------------------------------------

// GoalSphere_Events

// repeated .schema.improbable.gameplay.Collision event_collide = 1;
inline int GoalSphere_Events::event_collide_size() const {
  return event_collide_.size();
}
inline void GoalSphere_Events::clear_event_collide() {
  event_collide_.Clear();
}
inline const ::schema::improbable::gameplay::Collision& GoalSphere_Events::event_collide(int index) const {
  // @@protoc_insertion_point(field_get:schema.improbable.gameplay.GoalSphere.Events.event_collide)
  return event_collide_.Get(index);
}
inline ::schema::improbable::gameplay::Collision* GoalSphere_Events::mutable_event_collide(int index) {
  // @@protoc_insertion_point(field_mutable:schema.improbable.gameplay.GoalSphere.Events.event_collide)
  return event_collide_.Mutable(index);
}
inline ::schema::improbable::gameplay::Collision* GoalSphere_Events::add_event_collide() {
  // @@protoc_insertion_point(field_add:schema.improbable.gameplay.GoalSphere.Events.event_collide)
  return event_collide_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::schema::improbable::gameplay::Collision >*
GoalSphere_Events::mutable_event_collide() {
  // @@protoc_insertion_point(field_mutable_list:schema.improbable.gameplay.GoalSphere.Events.event_collide)
  return &event_collide_;
}
inline const ::google::protobuf::RepeatedPtrField< ::schema::improbable::gameplay::Collision >&
GoalSphere_Events::event_collide() const {
  // @@protoc_insertion_point(field_list:schema.improbable.gameplay.GoalSphere.Events.event_collide)
  return event_collide_;
}

// -------------------------------------------------------------------

// GoalSphere_Commands

// -------------------------------------------------------------------

// GoalSphere

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gameplay
}  // namespace improbable
}  // namespace schema

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_improbable_2fgameplay_2fGoalSphere_2eproto__INCLUDED
