// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: improbable/terrain/Terrain.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "improbable/terrain/Terrain.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace schema {
namespace improbable {
namespace terrain {

namespace {

const ::google::protobuf::Descriptor* TerrainData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TerrainData_reflection_ = NULL;
const ::google::protobuf::Descriptor* Terrain_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Terrain_reflection_ = NULL;
const ::google::protobuf::Descriptor* Terrain_Events_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Terrain_Events_reflection_ = NULL;
const ::google::protobuf::Descriptor* Terrain_Commands_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Terrain_Commands_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_improbable_2fterrain_2fTerrain_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_improbable_2fterrain_2fTerrain_2eproto() {
  protobuf_AddDesc_improbable_2fterrain_2fTerrain_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "improbable/terrain/Terrain.proto");
  GOOGLE_CHECK(file != NULL);
  TerrainData_descriptor_ = file->message_type(0);
  static const int TerrainData_offsets_[1] = {
  };
  TerrainData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TerrainData_descriptor_,
      TerrainData::default_instance_,
      TerrainData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TerrainData, _has_bits_[0]),
      -1,
      -1,
      sizeof(TerrainData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TerrainData, _internal_metadata_),
      -1);
  Terrain_descriptor_ = file->message_type(1);
  static const int Terrain_offsets_[1] = {
  };
  Terrain_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Terrain_descriptor_,
      Terrain::default_instance_,
      Terrain_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Terrain, _has_bits_[0]),
      -1,
      -1,
      sizeof(Terrain),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Terrain, _internal_metadata_),
      -1);
  Terrain_Events_descriptor_ = Terrain_descriptor_->nested_type(0);
  static const int Terrain_Events_offsets_[1] = {
  };
  Terrain_Events_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Terrain_Events_descriptor_,
      Terrain_Events::default_instance_,
      Terrain_Events_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Terrain_Events, _has_bits_[0]),
      -1,
      -1,
      sizeof(Terrain_Events),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Terrain_Events, _internal_metadata_),
      -1);
  Terrain_Commands_descriptor_ = Terrain_descriptor_->nested_type(1);
  static const int Terrain_Commands_offsets_[1] = {
  };
  Terrain_Commands_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Terrain_Commands_descriptor_,
      Terrain_Commands::default_instance_,
      Terrain_Commands_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Terrain_Commands, _has_bits_[0]),
      -1,
      -1,
      sizeof(Terrain_Commands),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Terrain_Commands, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_improbable_2fterrain_2fTerrain_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TerrainData_descriptor_, &TerrainData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Terrain_descriptor_, &Terrain::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Terrain_Events_descriptor_, &Terrain_Events::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Terrain_Commands_descriptor_, &Terrain_Commands::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_improbable_2fterrain_2fTerrain_2eproto() {
  delete TerrainData::default_instance_;
  delete TerrainData_reflection_;
  delete Terrain::default_instance_;
  delete Terrain_reflection_;
  delete Terrain_Events::default_instance_;
  delete Terrain_Events_reflection_;
  delete Terrain_Commands::default_instance_;
  delete Terrain_Commands_reflection_;
}

void protobuf_AddDesc_improbable_2fterrain_2fTerrain_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_improbable_2fterrain_2fTerrain_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::schema::improbable::protobuf_AddDesc_improbable_2fentity_5fstate_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n improbable/terrain/Terrain.proto\022\031sche"
    "ma.improbable.terrain\032\035improbable/entity"
    "_state.proto\"\r\n\013TerrainData\"\372\002\n\007Terrain\032"
    "\010\n\006Events\032\n\n\010Commands2d\n\023component_exten"
    "sion\022\036.schema.improbable.EntityState\030\352\007 "
    "\001(\0132&.schema.improbable.terrain.TerrainD"
    "ata2c\n\017event_extension\022\036.schema.improbab"
    "le.EntityEvent\030\352\007 \001(\0132).schema.improbabl"
    "e.terrain.Terrain.Events2i\n\021command_exte"
    "nsion\022 .schema.improbable.EntityCommand\030"
    "\352\007 \001(\0132+.schema.improbable.terrain.Terra"
    "in.Commands:#\302\363\030\037\n\032improbable.terrain.Te"
    "rrain\020\352\007B\023B\021TerrainOuterClass", 509);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "improbable/terrain/Terrain.proto", &protobuf_RegisterTypes);
  TerrainData::default_instance_ = new TerrainData();
  Terrain::default_instance_ = new Terrain();
  Terrain_Events::default_instance_ = new Terrain_Events();
  Terrain_Commands::default_instance_ = new Terrain_Commands();
  TerrainData::default_instance_->InitAsDefaultInstance();
  Terrain::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::schema::improbable::EntityState::default_instance(),
    1002, 11, false, false,
    &::schema::improbable::terrain::TerrainData::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::schema::improbable::EntityEvent::default_instance(),
    1002, 11, false, false,
    &::schema::improbable::terrain::Terrain_Events::default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::schema::improbable::EntityCommand::default_instance(),
    1002, 11, false, false,
    &::schema::improbable::terrain::Terrain_Commands::default_instance());
  Terrain_Events::default_instance_->InitAsDefaultInstance();
  Terrain_Commands::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_improbable_2fterrain_2fTerrain_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_improbable_2fterrain_2fTerrain_2eproto {
  StaticDescriptorInitializer_improbable_2fterrain_2fTerrain_2eproto() {
    protobuf_AddDesc_improbable_2fterrain_2fTerrain_2eproto();
  }
} static_descriptor_initializer_improbable_2fterrain_2fTerrain_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerrainData::TerrainData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.terrain.TerrainData)
}

void TerrainData::InitAsDefaultInstance() {
}

TerrainData::TerrainData(const TerrainData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.terrain.TerrainData)
}

void TerrainData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TerrainData::~TerrainData() {
  // @@protoc_insertion_point(destructor:schema.improbable.terrain.TerrainData)
  SharedDtor();
}

void TerrainData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TerrainData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerrainData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TerrainData_descriptor_;
}

const TerrainData& TerrainData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_improbable_2fterrain_2fTerrain_2eproto();
  return *default_instance_;
}

TerrainData* TerrainData::default_instance_ = NULL;

TerrainData* TerrainData::New(::google::protobuf::Arena* arena) const {
  TerrainData* n = new TerrainData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerrainData::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.terrain.TerrainData)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TerrainData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.terrain.TerrainData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.terrain.TerrainData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.terrain.TerrainData)
  return false;
#undef DO_
}

void TerrainData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.terrain.TerrainData)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.terrain.TerrainData)
}

::google::protobuf::uint8* TerrainData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.terrain.TerrainData)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.terrain.TerrainData)
  return target;
}

int TerrainData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.terrain.TerrainData)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerrainData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.terrain.TerrainData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TerrainData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TerrainData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.terrain.TerrainData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.terrain.TerrainData)
    MergeFrom(*source);
  }
}

void TerrainData::MergeFrom(const TerrainData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.terrain.TerrainData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TerrainData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.terrain.TerrainData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerrainData::CopyFrom(const TerrainData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.terrain.TerrainData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerrainData::IsInitialized() const {

  return true;
}

void TerrainData::Swap(TerrainData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerrainData::InternalSwap(TerrainData* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerrainData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TerrainData_descriptor_;
  metadata.reflection = TerrainData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TerrainData

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Terrain_Events::Terrain_Events()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.terrain.Terrain.Events)
}

void Terrain_Events::InitAsDefaultInstance() {
}

Terrain_Events::Terrain_Events(const Terrain_Events& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.terrain.Terrain.Events)
}

void Terrain_Events::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Terrain_Events::~Terrain_Events() {
  // @@protoc_insertion_point(destructor:schema.improbable.terrain.Terrain.Events)
  SharedDtor();
}

void Terrain_Events::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Terrain_Events::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Terrain_Events::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Terrain_Events_descriptor_;
}

const Terrain_Events& Terrain_Events::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_improbable_2fterrain_2fTerrain_2eproto();
  return *default_instance_;
}

Terrain_Events* Terrain_Events::default_instance_ = NULL;

Terrain_Events* Terrain_Events::New(::google::protobuf::Arena* arena) const {
  Terrain_Events* n = new Terrain_Events;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Terrain_Events::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.terrain.Terrain.Events)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Terrain_Events::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.terrain.Terrain.Events)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.terrain.Terrain.Events)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.terrain.Terrain.Events)
  return false;
#undef DO_
}

void Terrain_Events::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.terrain.Terrain.Events)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.terrain.Terrain.Events)
}

::google::protobuf::uint8* Terrain_Events::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.terrain.Terrain.Events)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.terrain.Terrain.Events)
  return target;
}

int Terrain_Events::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.terrain.Terrain.Events)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Terrain_Events::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.terrain.Terrain.Events)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Terrain_Events* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Terrain_Events>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.terrain.Terrain.Events)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.terrain.Terrain.Events)
    MergeFrom(*source);
  }
}

void Terrain_Events::MergeFrom(const Terrain_Events& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.terrain.Terrain.Events)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Terrain_Events::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.terrain.Terrain.Events)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Terrain_Events::CopyFrom(const Terrain_Events& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.terrain.Terrain.Events)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Terrain_Events::IsInitialized() const {

  return true;
}

void Terrain_Events::Swap(Terrain_Events* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Terrain_Events::InternalSwap(Terrain_Events* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Terrain_Events::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Terrain_Events_descriptor_;
  metadata.reflection = Terrain_Events_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Terrain_Commands::Terrain_Commands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.terrain.Terrain.Commands)
}

void Terrain_Commands::InitAsDefaultInstance() {
}

Terrain_Commands::Terrain_Commands(const Terrain_Commands& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.terrain.Terrain.Commands)
}

void Terrain_Commands::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Terrain_Commands::~Terrain_Commands() {
  // @@protoc_insertion_point(destructor:schema.improbable.terrain.Terrain.Commands)
  SharedDtor();
}

void Terrain_Commands::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Terrain_Commands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Terrain_Commands::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Terrain_Commands_descriptor_;
}

const Terrain_Commands& Terrain_Commands::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_improbable_2fterrain_2fTerrain_2eproto();
  return *default_instance_;
}

Terrain_Commands* Terrain_Commands::default_instance_ = NULL;

Terrain_Commands* Terrain_Commands::New(::google::protobuf::Arena* arena) const {
  Terrain_Commands* n = new Terrain_Commands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Terrain_Commands::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.terrain.Terrain.Commands)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Terrain_Commands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.terrain.Terrain.Commands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.terrain.Terrain.Commands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.terrain.Terrain.Commands)
  return false;
#undef DO_
}

void Terrain_Commands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.terrain.Terrain.Commands)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.terrain.Terrain.Commands)
}

::google::protobuf::uint8* Terrain_Commands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.terrain.Terrain.Commands)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.terrain.Terrain.Commands)
  return target;
}

int Terrain_Commands::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.terrain.Terrain.Commands)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Terrain_Commands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.terrain.Terrain.Commands)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Terrain_Commands* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Terrain_Commands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.terrain.Terrain.Commands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.terrain.Terrain.Commands)
    MergeFrom(*source);
  }
}

void Terrain_Commands::MergeFrom(const Terrain_Commands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.terrain.Terrain.Commands)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Terrain_Commands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.terrain.Terrain.Commands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Terrain_Commands::CopyFrom(const Terrain_Commands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.terrain.Terrain.Commands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Terrain_Commands::IsInitialized() const {

  return true;
}

void Terrain_Commands::Swap(Terrain_Commands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Terrain_Commands::InternalSwap(Terrain_Commands* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Terrain_Commands::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Terrain_Commands_descriptor_;
  metadata.reflection = Terrain_Commands_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Terrain::kComponentExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityState,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::terrain::TerrainData >, 11, false >
  Terrain::component_extension(kComponentExtensionFieldNumber, ::schema::improbable::terrain::TerrainData::default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Terrain::kEventExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityEvent,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::terrain::Terrain_Events >, 11, false >
  Terrain::event_extension(kEventExtensionFieldNumber, ::schema::improbable::terrain::Terrain_Events::default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Terrain::kCommandExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityCommand,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::terrain::Terrain_Commands >, 11, false >
  Terrain::command_extension(kCommandExtensionFieldNumber, ::schema::improbable::terrain::Terrain_Commands::default_instance());
Terrain::Terrain()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.terrain.Terrain)
}

void Terrain::InitAsDefaultInstance() {
}

Terrain::Terrain(const Terrain& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.terrain.Terrain)
}

void Terrain::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Terrain::~Terrain() {
  // @@protoc_insertion_point(destructor:schema.improbable.terrain.Terrain)
  SharedDtor();
}

void Terrain::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Terrain::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Terrain::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Terrain_descriptor_;
}

const Terrain& Terrain::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_improbable_2fterrain_2fTerrain_2eproto();
  return *default_instance_;
}

Terrain* Terrain::default_instance_ = NULL;

Terrain* Terrain::New(::google::protobuf::Arena* arena) const {
  Terrain* n = new Terrain;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Terrain::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.terrain.Terrain)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Terrain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.terrain.Terrain)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.terrain.Terrain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.terrain.Terrain)
  return false;
#undef DO_
}

void Terrain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.terrain.Terrain)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.terrain.Terrain)
}

::google::protobuf::uint8* Terrain::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.terrain.Terrain)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.terrain.Terrain)
  return target;
}

int Terrain::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.terrain.Terrain)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Terrain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.terrain.Terrain)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Terrain* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Terrain>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.terrain.Terrain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.terrain.Terrain)
    MergeFrom(*source);
  }
}

void Terrain::MergeFrom(const Terrain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.terrain.Terrain)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Terrain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.terrain.Terrain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Terrain::CopyFrom(const Terrain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.terrain.Terrain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Terrain::IsInitialized() const {

  return true;
}

void Terrain::Swap(Terrain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Terrain::InternalSwap(Terrain* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Terrain::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Terrain_descriptor_;
  metadata.reflection = Terrain_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Terrain_Events

// -------------------------------------------------------------------

// Terrain_Commands

// -------------------------------------------------------------------

// Terrain

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace terrain
}  // namespace improbable
}  // namespace schema

// @@protoc_insertion_point(global_scope)
