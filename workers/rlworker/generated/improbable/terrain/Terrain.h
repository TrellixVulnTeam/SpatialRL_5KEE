// Generated by SpatialOS codegen. DO NOT EDIT!
// source: improbable/terrain/Terrain.schema
#ifndef SPATIALOS_SCHEMA_improbable_terrain_Terrain_schema_894961320333765347_INCLUDED
#define SPATIALOS_SCHEMA_improbable_terrain_Terrain_schema_894961320333765347_INCLUDED
#include <improbable/collections.h>
#include <improbable/math/coordinates.h>
#include <improbable/math/vector3d.h>
#include <improbable/math/vector3f.h>
#include <improbable/worker.h>
#include <cstddef>
#include <cstdint>
#include <set>
#include <string>

// Schema forward declarations.
//----------------------------------------------------------------

namespace schema {
namespace improbable {
namespace terrain {

class TerrainData;

}  // ::improbable
}  // ::terrain
}  // ::schema

namespace improbable {
namespace terrain {

// Forward declarations.
//----------------------------------------------------------------

class TerrainData;

namespace detail {
const ::worker::detail::ClientComponentVtable& Vtable_Terrain();
struct GenericCommandObject_Terrain {
  std::uint32_t CommandId;
  ::worker::Variant<> CommandObject;
};
}  // ::detail

// Enumerations.
//----------------------------------------------------------------

// Data classes.
//----------------------------------------------------------------

class TerrainData {
public:
  // Main constructor.
  TerrainData();

  // Copyable and moveable.
  TerrainData(TerrainData&&) = default;
  TerrainData(const TerrainData&) = default;
  TerrainData& operator=(TerrainData&&) = default;
  TerrainData& operator=(const TerrainData&) = default;
  ~TerrainData() = default;

  bool operator==(const TerrainData&) const;
  bool operator!=(const TerrainData&) const;
};

// Component metaclasses and update classes.
//----------------------------------------------------------------

/**
 * This type can be supplied as the template parameter to all component-related templated types
 * and methods in the C++ worker API. For example:
 *
 *   using ::improbable::terrain::Terrain;
 *
 *   Terrain::Update update;
 *   connection.SendComponentUpdate< Terrain >(entity_id, update);
 *
 *   dispatcher.OnComponentUpdate< Terrain >(
 *       [&](const worker::ComponentUpdateOp< Terrain >& op) {
 *         worker::EntityId entity_id = op.GetEntityId();
 *         Terrain::Update update = op.GetUpdate();
 *       });
 *
 *   Terrain::Data data = entity.Get< Terrain >();
 */
struct Terrain : ::worker::detail::ComponentMetaclassBase<
    Terrain, detail::Vtable_Terrain> {
  static constexpr const ::worker::ComponentId ComponentId = 1002;
  using Data = ::improbable::terrain::TerrainData;
  using GenericCommandObject = detail::GenericCommandObject_Terrain;

  class Update {
  public:
    // Default-constructible, copyable and movable.
    Update() = default;
    Update(Update&&) = default;
    Update(const Update&) = default;
    Update& operator=(Update&&) = default;
    Update& operator=(const Update&) = default;
    ~Update() = default;

    bool operator==(const Update&) const;
    bool operator!=(const Update&) const;

    /** Creates an Update from a ::improbable::terrain::TerrainData object. */
    static Update FromInitialData(const ::improbable::terrain::TerrainData& data);

    /**
     * Converts to a ::improbable::terrain::TerrainData
     * object. It is an error to call this function unless *all* of the optional fields in this
     * update are filled in.
     */
    ::improbable::terrain::TerrainData ToInitialData() const;

    /**
     * Replaces fields in the given ::improbable::terrain::TerrainData
     * object with the corresponding fields in this update, where present.
     */
    void ApplyTo(::improbable::terrain::TerrainData&) const;
  };

};

// Implementation details.
//----------------------------------------------------------------

namespace detail {

void Serialize_TerrainData(
    const ::improbable::terrain::TerrainData&,
    ::schema::improbable::terrain::TerrainData&);

::improbable::terrain::TerrainData Deserialize_TerrainData(
    const ::schema::improbable::terrain::TerrainData&);

}  // ::detail
}  // ::terrain
}  // ::improbable

#endif  // SPATIALOS_SCHEMA_improbable_terrain_Terrain_schema_894961320333765347_INCLUDED
