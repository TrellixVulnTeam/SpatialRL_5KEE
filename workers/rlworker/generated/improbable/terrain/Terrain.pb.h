// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: improbable/terrain/Terrain.proto

#ifndef PROTOBUF_improbable_2fterrain_2fTerrain_2eproto__INCLUDED
#define PROTOBUF_improbable_2fterrain_2fTerrain_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "improbable/entity_state.pb.h"
// @@protoc_insertion_point(includes)

namespace schema {
namespace improbable {
namespace terrain {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_improbable_2fterrain_2fTerrain_2eproto();
void protobuf_AssignDesc_improbable_2fterrain_2fTerrain_2eproto();
void protobuf_ShutdownFile_improbable_2fterrain_2fTerrain_2eproto();

class Terrain;
class TerrainData;
class Terrain_Commands;
class Terrain_Events;

// ===================================================================

class TerrainData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.terrain.TerrainData) */ {
 public:
  TerrainData();
  virtual ~TerrainData();

  TerrainData(const TerrainData& from);

  inline TerrainData& operator=(const TerrainData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TerrainData& default_instance();

  void Swap(TerrainData* other);

  // implements Message ----------------------------------------------

  inline TerrainData* New() const { return New(NULL); }

  TerrainData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TerrainData& from);
  void MergeFrom(const TerrainData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TerrainData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:schema.improbable.terrain.TerrainData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_improbable_2fterrain_2fTerrain_2eproto();
  friend void protobuf_AssignDesc_improbable_2fterrain_2fTerrain_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fterrain_2fTerrain_2eproto();

  void InitAsDefaultInstance();
  static TerrainData* default_instance_;
};
// -------------------------------------------------------------------

class Terrain_Events : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.terrain.Terrain.Events) */ {
 public:
  Terrain_Events();
  virtual ~Terrain_Events();

  Terrain_Events(const Terrain_Events& from);

  inline Terrain_Events& operator=(const Terrain_Events& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Terrain_Events& default_instance();

  void Swap(Terrain_Events* other);

  // implements Message ----------------------------------------------

  inline Terrain_Events* New() const { return New(NULL); }

  Terrain_Events* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Terrain_Events& from);
  void MergeFrom(const Terrain_Events& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Terrain_Events* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:schema.improbable.terrain.Terrain.Events)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_improbable_2fterrain_2fTerrain_2eproto();
  friend void protobuf_AssignDesc_improbable_2fterrain_2fTerrain_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fterrain_2fTerrain_2eproto();

  void InitAsDefaultInstance();
  static Terrain_Events* default_instance_;
};
// -------------------------------------------------------------------

class Terrain_Commands : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.terrain.Terrain.Commands) */ {
 public:
  Terrain_Commands();
  virtual ~Terrain_Commands();

  Terrain_Commands(const Terrain_Commands& from);

  inline Terrain_Commands& operator=(const Terrain_Commands& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Terrain_Commands& default_instance();

  void Swap(Terrain_Commands* other);

  // implements Message ----------------------------------------------

  inline Terrain_Commands* New() const { return New(NULL); }

  Terrain_Commands* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Terrain_Commands& from);
  void MergeFrom(const Terrain_Commands& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Terrain_Commands* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:schema.improbable.terrain.Terrain.Commands)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_improbable_2fterrain_2fTerrain_2eproto();
  friend void protobuf_AssignDesc_improbable_2fterrain_2fTerrain_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fterrain_2fTerrain_2eproto();

  void InitAsDefaultInstance();
  static Terrain_Commands* default_instance_;
};
// -------------------------------------------------------------------

class Terrain : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.terrain.Terrain) */ {
 public:
  Terrain();
  virtual ~Terrain();

  Terrain(const Terrain& from);

  inline Terrain& operator=(const Terrain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Terrain& default_instance();

  void Swap(Terrain* other);

  // implements Message ----------------------------------------------

  inline Terrain* New() const { return New(NULL); }

  Terrain* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Terrain& from);
  void MergeFrom(const Terrain& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Terrain* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Terrain_Events Events;
  typedef Terrain_Commands Commands;

  // accessors -------------------------------------------------------

  static const int kComponentExtensionFieldNumber = 1002;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityState,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::terrain::TerrainData >, 11, false >
    component_extension;
  static const int kEventExtensionFieldNumber = 1002;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityEvent,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::terrain::Terrain_Events >, 11, false >
    event_extension;
  static const int kCommandExtensionFieldNumber = 1002;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityCommand,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::terrain::Terrain_Commands >, 11, false >
    command_extension;
  // @@protoc_insertion_point(class_scope:schema.improbable.terrain.Terrain)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_improbable_2fterrain_2fTerrain_2eproto();
  friend void protobuf_AssignDesc_improbable_2fterrain_2fTerrain_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fterrain_2fTerrain_2eproto();

  void InitAsDefaultInstance();
  static Terrain* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TerrainData

// -------------------------------------------------------------------

// Terrain_Events

// -------------------------------------------------------------------

// Terrain_Commands

// -------------------------------------------------------------------

// Terrain

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace terrain
}  // namespace improbable
}  // namespace schema

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_improbable_2fterrain_2fTerrain_2eproto__INCLUDED
