// Generated by SpatialOS codegen. DO NOT EDIT!
// source: improbable.ComponentAcl in improbable/standard_library.schema.

namespace Improbable
{

public partial struct ComponentAcl : global::System.IEquatable<ComponentAcl>
{
  /// <summary>
  /// Field write = 1.
  /// </summary>
  public global::Improbable.Collections.Map<uint, global::Improbable.WorkerPredicate> write;

  public ComponentAcl(global::Improbable.Collections.Map<uint, global::Improbable.WorkerPredicate> write)
  {
    this.write = write;
  }

  public ComponentAcl DeepCopy()
  {
    var _result = new ComponentAcl();
    _result.write = new global::Improbable.Collections.Map<uint, global::Improbable.WorkerPredicate>(write.Count);
    for (var _node = write.First; _node != null; _node = _node.Next)
    {
      _result.write.Add(_node.Value.Key, _node.Value.Value.DeepCopy());
    }
    return _result;

  }

  public override bool Equals(object _obj)
  {
    return _obj is ComponentAcl && Equals((ComponentAcl) _obj);
  }

  public static bool operator==(ComponentAcl a, ComponentAcl b)
  {
    return a.Equals(b);
  }

  public static bool operator!=(ComponentAcl a, ComponentAcl b)
  {
    return !a.Equals(b);
  }

  public bool Equals(ComponentAcl _obj)
  {
    return
        write == _obj.write;
  }

  public override int GetHashCode()
  {
    int _result = 1327;
    _result = (_result * 977) + (write == null ? 0 : write.GetHashCode());
    return _result;
  }
}

public static class ComponentAcl_Internal
{
  public static global::Schema.Improbable.ComponentAcl Serialize(ComponentAcl _data)
  {
    var _proto = new global::Schema.Improbable.ComponentAcl();
    for (var _node = _data.write.First; _node != null; _node = _node.Next)
    {
      var _entry = new global::Schema.Improbable.ComponentAcl.Field1WriteEntry();
      _entry.Key = _node.Value.Key;
      _entry.Value = global::Improbable.WorkerPredicate_Internal.Serialize(_node.Value.Value);
      _proto.Field1Write.Add(_entry);
    }
    return _proto;
  }

  public static ComponentAcl Deserialize(global::Schema.Improbable.ComponentAcl _proto)
  {
    ComponentAcl _data;
    _data.write = new global::Improbable.Collections.Map<uint, global::Improbable.WorkerPredicate>(_proto.Field1Write.Count);
    for (var _i = 0; _i < _proto.Field1Write.Count; ++_i)
    {
      _data.write.Add(_proto.Field1Write[_i].Key, global::Improbable.WorkerPredicate_Internal.Deserialize(_proto.Field1Write[_i].Value));
    }
    return _data;
  }
}

}
