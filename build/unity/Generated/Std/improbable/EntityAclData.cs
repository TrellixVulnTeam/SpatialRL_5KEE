// Generated by SpatialOS codegen. DO NOT EDIT!
// source: improbable.EntityAclData in improbable/standard_library.schema.

namespace Improbable
{

public partial struct EntityAclData : global::System.IEquatable<EntityAclData>
{
  /// <summary>
  /// Field read = 1.
  /// </summary>
  public global::Improbable.Collections.Option<global::Improbable.WorkerPredicate> read;
  /// <summary>
  /// Field component_acl = 2.
  /// </summary>
  public global::Improbable.Collections.Option<global::Improbable.ComponentAcl> componentAcl;

  public EntityAclData(
      global::Improbable.Collections.Option<global::Improbable.WorkerPredicate> read,
      global::Improbable.Collections.Option<global::Improbable.ComponentAcl> componentAcl)
  {
    this.read = read;
    this.componentAcl = componentAcl;
  }

  public EntityAclData DeepCopy()
  {
    var _result = new EntityAclData();
    _result.read = new global::Improbable.Collections.Option<global::Improbable.WorkerPredicate>();
    if (read.HasValue)
    {
      _result.read.Set(read.Value.DeepCopy());
    }
    _result.componentAcl = new global::Improbable.Collections.Option<global::Improbable.ComponentAcl>();
    if (componentAcl.HasValue)
    {
      _result.componentAcl.Set(componentAcl.Value.DeepCopy());
    }
    return _result;

  }

  public override bool Equals(object _obj)
  {
    return _obj is EntityAclData && Equals((EntityAclData) _obj);
  }

  public static bool operator==(EntityAclData a, EntityAclData b)
  {
    return a.Equals(b);
  }

  public static bool operator!=(EntityAclData a, EntityAclData b)
  {
    return !a.Equals(b);
  }

  public bool Equals(EntityAclData _obj)
  {
    return
        read == _obj.read &&
        componentAcl == _obj.componentAcl;
  }

  public override int GetHashCode()
  {
    int _result = 1327;
    _result = (_result * 977) + read.GetHashCode();
    _result = (_result * 977) + componentAcl.GetHashCode();
    return _result;
  }
}

public static class EntityAclData_Internal
{
  public static global::Schema.Improbable.EntityAclData Serialize(EntityAclData _data)
  {
    var _proto = new global::Schema.Improbable.EntityAclData();
    if (_data.read.HasValue)
    {
      _proto.Field1Read = global::Improbable.WorkerPredicate_Internal.Serialize(_data.read.Value);
    }
    if (_data.componentAcl.HasValue)
    {
      _proto.Field2ComponentAcl = global::Improbable.ComponentAcl_Internal.Serialize(_data.componentAcl.Value);
    }
    return _proto;
  }

  public static EntityAclData Deserialize(global::Schema.Improbable.EntityAclData _proto)
  {
    EntityAclData _data;
    _data.read = new global::Improbable.Collections.Option<global::Improbable.WorkerPredicate>();
    if (_proto.Field1Read != null)
    {
      _data.read.Set(global::Improbable.WorkerPredicate_Internal.Deserialize(_proto.Field1Read));
    }
    _data.componentAcl = new global::Improbable.Collections.Option<global::Improbable.ComponentAcl>();
    if (_proto.Field2ComponentAcl != null)
    {
      _data.componentAcl.Set(global::Improbable.ComponentAcl_Internal.Deserialize(_proto.Field2ComponentAcl));
    }
    return _data;
  }
}

}
