// Generated by SpatialOS codegen. DO NOT EDIT!
// source: improbable.player.NameData in improbable/player/name.schema.

namespace Improbable.Player
{

public partial struct NameData : global::System.IEquatable<NameData>
{
  /// <summary>
  /// Field entity_name = 1.
  /// </summary>
  public string entityName;

  public NameData(string entityName)
  {
    this.entityName = entityName;
  }

  public NameData DeepCopy()
  {
    var _result = new NameData();
    _result.entityName = entityName;
    return _result;

  }

  public override bool Equals(object _obj)
  {
    return _obj is NameData && Equals((NameData) _obj);
  }

  public static bool operator==(NameData a, NameData b)
  {
    return a.Equals(b);
  }

  public static bool operator!=(NameData a, NameData b)
  {
    return !a.Equals(b);
  }

  public bool Equals(NameData _obj)
  {
    return
        entityName == _obj.entityName;
  }

  public override int GetHashCode()
  {
    int _result = 1327;
    _result = (_result * 977) + (entityName == null ? 0 : entityName.GetHashCode());
    return _result;
  }
}

public static class NameData_Internal
{
  public static global::Schema.Improbable.Player.NameData Serialize(NameData _data)
  {
    var _proto = new global::Schema.Improbable.Player.NameData();
    _proto.Field1EntityName = _data.entityName;
    return _proto;
  }

  public static NameData Deserialize(global::Schema.Improbable.Player.NameData _proto)
  {
    NameData _data;
    _data.entityName = _proto.Field1EntityName;
    return _data;
  }
}

}
