// Generated by SpatialOS codegen. DO NOT EDIT!
// source: improbable.gameplay.Collision in improbable/gameplay/GoalSphere.schema.

namespace Improbable.Gameplay
{

public partial struct Collision : global::System.IEquatable<Collision>
{
  /// <summary>
  /// Field time = 1.
  /// </summary>
  public long time;

  public Collision(long time)
  {
    this.time = time;
  }

  public Collision DeepCopy()
  {
    var _result = new Collision();
    _result.time = time;
    return _result;

  }

  public override bool Equals(object _obj)
  {
    return _obj is Collision && Equals((Collision) _obj);
  }

  public static bool operator==(Collision a, Collision b)
  {
    return a.Equals(b);
  }

  public static bool operator!=(Collision a, Collision b)
  {
    return !a.Equals(b);
  }

  public bool Equals(Collision _obj)
  {
    return
        time == _obj.time;
  }

  public override int GetHashCode()
  {
    int _result = 1327;
    _result = (_result * 977) + time.GetHashCode();
    return _result;
  }
}

public static class Collision_Internal
{
  public static global::Schema.Improbable.Gameplay.Collision Serialize(Collision _data)
  {
    var _proto = new global::Schema.Improbable.Gameplay.Collision();
    _proto.Field1Time = _data.time;
    return _proto;
  }

  public static Collision Deserialize(global::Schema.Improbable.Gameplay.Collision _proto)
  {
    Collision _data;
    _data.time = _proto.Field1Time;
    return _data;
  }
}

}
