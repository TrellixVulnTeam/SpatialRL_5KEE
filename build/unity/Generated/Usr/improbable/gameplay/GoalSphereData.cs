// Generated by SpatialOS codegen. DO NOT EDIT!
// source: improbable.gameplay.GoalSphereData in improbable/gameplay/GoalSphere.schema.

namespace Improbable.Gameplay
{

public partial struct GoalSphereData : global::System.IEquatable<GoalSphereData>
{
  /// <summary>
  /// Field collided = 1.
  /// </summary>
  public bool collided;

  public GoalSphereData(bool collided)
  {
    this.collided = collided;
  }

  public GoalSphereData DeepCopy()
  {
    var _result = new GoalSphereData();
    _result.collided = collided;
    return _result;

  }

  public override bool Equals(object _obj)
  {
    return _obj is GoalSphereData && Equals((GoalSphereData) _obj);
  }

  public static bool operator==(GoalSphereData a, GoalSphereData b)
  {
    return a.Equals(b);
  }

  public static bool operator!=(GoalSphereData a, GoalSphereData b)
  {
    return !a.Equals(b);
  }

  public bool Equals(GoalSphereData _obj)
  {
    return
        collided == _obj.collided;
  }

  public override int GetHashCode()
  {
    int _result = 1327;
    _result = (_result * 977) + collided.GetHashCode();
    return _result;
  }
}

public static class GoalSphereData_Internal
{
  public static global::Schema.Improbable.Gameplay.GoalSphereData Serialize(GoalSphereData _data)
  {
    var _proto = new global::Schema.Improbable.Gameplay.GoalSphereData();
    _proto.Field1Collided = _data.collided;
    return _proto;
  }

  public static GoalSphereData Deserialize(global::Schema.Improbable.Gameplay.GoalSphereData _proto)
  {
    GoalSphereData _data;
    _data.collided = _proto.Field1Collided;
    return _data;
  }
}

}
